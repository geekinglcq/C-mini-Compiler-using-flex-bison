program -> declaration_list
declaration_list -> declaration_list declaration | declaration
declaration -> var_declaration | fun_declaration
var_declaration -> type_specifier ID ; | type_specifier ID [ NUM ] ;
type_specifier -> int | void
fun_declaration -> type_specifier ID ( params ) compound_stmt
params -> param_list | void
param_list -> param_list , param | param
param -> type_specifier ID | type_specifier ID [ ]
compound_stmt -> { local_declarations statement_list }
local_declarations -> local_declarations var_declaration | empty
statement_list -> statement_list statement | empty
statement -> expression_stmt | compound_stmt | selection_stmt
statement -> iteration_stmt | return_stmt
expression_stmt -> expression ; | ;
selection_stmt -> if ( expression ) statement
selection_stmt -> if ( expression ) statement else statement
iteration_stmt -> while ( expression ) statement
return_stmt -> return ; | return expression ;
expression -> var = expression | simple_expression
var -> ID | ID [ expression ]
simple_expression -> additive_expression relop additive_expression
simple_expression -> additive_expression
relop -> <= | < | > | >= | == | !=
additive_expression -> additive_expression addop term | term
addop -> + | -
term -> term mulop factor | factor
mulop -> * | /
factor -> ( expression ) | var
factor -> call | NUM
call -> ID ( args )
args -> arg_list | empty
arg_list -> arg_list , expression | expression